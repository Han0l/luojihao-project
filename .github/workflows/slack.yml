name: Build and Push

on:
  push:
    branches:
      #1.The pipeline should be triggered whenever this is a push to a branch name with the following pattern release/v<digit>.<digit>
      - 'release/v[0-9]+\.[0-9]+'
      
jobs:
  build:
    #8.if the commit message start with #NORUN the pipeline should not run
    if: ${{!startsWith(github.event.head_commit.message, '#NORUN')}}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4
    
      #2.Scan the branch and generate report
      #3.Find vulnerabilities
      #- name: Run Trivy vulnerability scanner in fs mode
      #  id: vulner
      #  uses: aquasecurity/trivy-action@0.19.0
      #  with:
      #    scan-type: 'fs'
      #    scan-ref: '.'
      #    format: 'table'
          #exit-code: '0' 
          #severity: 'CRITICAL' #for successful workflow
      #    severity: 'CRITICAL,HIGH' #for failed workflow
      #    output: 'trivy-results.txt'
      #    ignore-unfixed: true
      #    vuln-type: 'os,library'

      - name: Run Trivy vulnerability scanner in repo mode
        id: vulner
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        with:
          #image-ref: 'docker.io/lokiee00101/go-fortune:${{ github.sha }}'
          scan-type: 'fs'
          scan-ref: '.'
          exit-code: '1'
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL,HIGH'
          
      - name: slackNotification
        if: steps.vulner.outputs.exit-code != '0' 
        #change to "==" when test
        uses: rtCamp/action-slack-notify@v2
        env:
                    #SLACK_CHANNEL: general
                    #SLACK_COLOR: '#ff00ff' # or a specific color like 'good' or '#ff00ff'
                    #SLACK_ICON: https://github.com/rtCamp.png?size=48
                    #SLACK_MESSAGE: 'Post Content :rocket:'
                    #SLACK_TITLE: Post Title
                    #SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Scan failed - Luo Jihao'

      #3.upload the report produced
      - name: upload
        if: steps.vulner.outputs.exit-code != '0' 
        uses: MeilCli/slack-upload-file@v4
        with:
            slack_token: ${{ secrets.SLACK_TOKEN }}
            channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
            file_path: 'trivy-results.txt'
            initial_comment: 'Scan report by LuoJihao'
      
      #4.if no vulnerabilities
      - name: Set up QEMU
        if: steps.vulner.outputs.exit-code == '0' 
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.vulner.outputs.exit-code == '0'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.vulner.outputs.exit-code == '0'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #5.building image and push image to Docker Hub account
      - name: Build and push
        id: build-and-push
        if: steps.vulner.outputs.exit-code == '0'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: lokiee00101/go-fortune:latest

      #6.Digitally sign the image
      - name: cosign-installer
        if: steps.vulner.outputs.exit-code == '0'
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign the images with GitHub OIDC Token
        if: steps.vulner.outputs.exit-code == '0'
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          cosign sign --yes lokiee00101/go-fortune:latest@${DIGEST}
      
      #7.Send a notification to Slack
      - name: slackNotification
        if: steps.vulner.outputs.exit-code == '0' 
        #change to "==" when test
        uses: rtCamp/action-slack-notify@v2
        env:
                    #SLACK_CHANNEL: general
                    #SLACK_COLOR: '#ff00ff' # or a specific color like 'good' or '#ff00ff'
                    #SLACK_ICON: https://github.com/rtCamp.png?size=48
                    #SLACK_MESSAGE: 'Post Content :rocket:'
                    #SLACK_TITLE: Post Title
                    #SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "*Name:* Luo Jihao \n *Metriculation:* A0290860B \n *Email:* e.1327891@u.nus.edu \n *Git:* https://github.com/Han0l/luojihao-project \n *Image:* https://hub.docker.com/repository/docker/lokiee00101/go-fortune/general"
          SLACK_TITLE: Image build and signed
          SLACK_USERNAME: CICD
          
      # Add other steps for your CI/CD pipeline...
